###########################################################################
# Software Factory
###########################################################################
#  These services are the building blocks for a software factory
# environment, composed of:
#   - jenkins for Continuous Integration and Continuous Delivery (CI/CD),
#   - sonarqube for Continuous Inspection,
#   - nexus for Artifact/archive Repository Management.
###########################################################################

version: "3"

services:

  # Use an nginx reverse-proxy to expose all our public web services on
  # the same host, via standard ports by using virtual hosts.
  # See: https://github.com/jwilder/nginx-proxy
  #
  # Virtual hosts are defined by an environment variable in each service's
  # <service>.env file as:
  #   VIRTUAL_HOST=<service>.<hostname>
  # The main host name is defined in the proxy's proxy.env file
  proxy:
    image: jwilder/nginx-proxy
    depends_on:
      - jenkins
      - nexus
      - sonarqube
    ports:
      - "80:80"
    networks:
      - softwarefactorynet
      - jenkinsnet
      - nexusnet
      - sonarnet
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./proxy/proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
    environment:
      - proxy/proxy.env

  jenkins:
    image: jenkins/jenkins:lts
    expose:
      - "8080"  # default web server listening port
      - "50000" # default JNLP slave listening port
    networks:
      - softwarefactorynet
      - jenkinsnet
      - nexusnet
    extra_hosts:
      - "nexus.software-factory.lan:172.20.0.1"
      - "sonarqube.software-factory.lan:172.20.0.1"
    volumes:
      # so that jenkins-in-docker can start containers
      # on its host's docker engine rather than doing
      # Docker-in-Docker
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins-data:/var/jenkins_home
      - /opt/software-factory/jenkins/data:/var/jenkins_home
    env_file:
      - jenkins/jenkins-server/jenkins.env

  nexus:
    image: sonatype/nexus3
    expose:
      - "8081"
    networks:
      - softwarefactorynet
      - nexusnet
    volumes:
      - nexus-data:/nexus-data
      - nexus-data:/opt/software-factory/nexus/data
    env_file:
      - nexus/nexus.env

  sonarqube:
    # TODO: when a 6.x LTS is released, switch to it.
    # The 5.6 LTS is not exactly ideal because of missing bug-fixes
    # for java project analyzer configurations.
    # image: sonarqube:lts
    image: sonarqube:6.6
    depends_on:
      - sonarqube_database
    expose:
      - "9000"
    networks:
      - softwarefactorynet
      - sonarnet
    volumes:
      - sonarqube-conf:/opt/sonarqube/conf
      - /opt/software-factory/sonarqube/conf:/opt/sonarqube/conf
      - sonarqube-data:/opt/sonarqube/data
      - /opt/software-factory/sonarqube/data:/opt/sonarqube/conf
      - sonarqube-extensions:/opt/sonarqube/extensions
      - /opt/software-factory/sonarqube/extensions:/opt/sonarqube/extensions
      - sonarqube-bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    env_file:
      - sonarqube/sonarqube.env

  sonarqube_database:
    image: mysql:5.7
    expose:
      - "3306"
    networks:
      - sonarnet
    env_file:
      - sonarqube/sonarqube_database.env

networks:
  softwarefactorynet:
    driver: bridge
  jenkinsnet:
    driver: bridge
  nexusnet:
    driver: bridge
  sonarnet:
    driver: bridge

volumes:
  jenkins-data:
  nexus-data:
  sonarqube-conf:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-bundled-plugins:
